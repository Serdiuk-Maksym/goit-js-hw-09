{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAERU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,EAAAf,GAASgB,OAAOC,QAAQ,uBAAqBL,QAAiBC,MAAU,IAEzEK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,EAAAf,GAASgB,OAAOG,QAAQ,sBAAoBP,QAAeC,MAAU,G,CAvC9DO,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAcL,SAASC,cAAc,wBACrCK,EAAaN,SAASC,cAAc,uBACpCM,EAAYP,SAASC,cAAc,sBAEnCO,EAASC,SAASJ,EAAYK,OAC9BjB,EAAQgB,SAASH,EAAWI,OAC5BC,EAAOF,SAASF,EAAUG,OAEhC,IAAIE,EAAenB,EAGnB,IAAK,IAAID,EAAW,EAAGA,GAAYgB,EAAQhB,IACzCV,EAAcU,EAAUoB,GACxBA,GAAgBD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault(); // Prevent form submission\n\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n\n  const amount = parseInt(amountInput.value);\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n\n  let currentDelay = delay; // Declare a new variable to store the current delay\n\n  // Call createPromise for each promise position\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, currentDelay);\n    currentDelay += step; // Update the current delay\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","document","querySelector","addEventListener","event","preventDefault","amountInput","delayInput","stepInput","amount","parseInt","value","step","currentDelay"],"version":3,"file":"03-promises.8bd46673.js.map"}